# This workflow will build, test, and analyze a Java project with Maven and SonarCloud

name: Java CI with Maven and SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code with full Git history for SonarCloud
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Crucial for SonarCloud's analysis

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3 (Optional but recommended): Cache SonarCloud dependencies
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 4: Build, run tests, and generate coverage report
      - name: Build with Maven
        run: mvn -B verify --file pom.xml 

      # =================================================================
      # PASSO DE DIAGNÓSTICO: Adicione este bloco de código
      # =================================================================
      - name: List files in the root directory
        run: ls -la
      # =================================================================

      # Step 5: Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided by Actions
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Must be created in SonarCloud

      # Step 6 (Optional): Update GitHub's dependency graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
